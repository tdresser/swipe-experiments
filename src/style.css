html,
body {
  margin: 0;
  padding: 0;
  height: 100%;
  width: 100%;
}

body {
  timeline-scope: --scrollXTimeline, --scrollYTimeline;
  color:white;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  font-size:20px;
}

#debug {
  position:fixed;
  z-index:2;
}

/* TODO: use CSS.registerProperty({
      name: "--o",
      syntax: "<number>",
      initialValue: 0,
      inherits: "false"
   });
   */

@property --viewportWidthPx {
  syntax: "<number>";
  initial-value: 0;
  inherits: false
}

@property --viewportHeightPx {
  syntax: "<number>";
  initial-value: 0;
  inherits: false
}

@property --sY {
  syntax: "<number>";
  initial-value: 0;
  inherits: false
}

@property --sX {
  syntax: "<number>";
  initial-value: 0;
  inherits: false
}

@property --sDist {
  syntax: "<number>";
  initial-value: 0;
  inherits: false
}

@property --XsizeMultiplier {
  syntax: "<number>";
  initial-value: 0;
  inherits: false
}

@property --YsizeMultiplier {
  syntax: "<number>";
  initial-value: 0;
  inherits: false
}

@property --pointerDownX {
  syntax: "<number>";
  initial-value: 0;
  inherits: false
}

@property --pointerDownY {
  syntax: "<number>";
  initial-value: 0;
  inherits: false
}

#scroll_container {
  height: 100%;
  width: 100%;
  overflow: scroll;
  scroll-timeline: --scrollXTimeline x, --scrollYTimeline y;
  scroll-snap-type: both mandatory;
}

#scroll_contents {
  height: 300vh;
  width: 300vw;
  background: repeating-linear-gradient(45deg,
      #606dbc,
      #606dbc 10px,
      #465298 10px,
      #465298 20px);
}

@keyframes scrollXAnimation {
  from {
    --sX: -1;
  }

  to {
    --sX: 1;
  }
}

@keyframes scrollYAnimation {
  from {
    --sY: -1;
  }

  to {
    --sY: 1;
  }
}

#square {
  pointer-events: none;
  animation-fill-mode: both;
  animation-timing-function: linear;
  animation-name: scrollXAnimation, scrollYAnimation;
  animation-timeline: --scrollXTimeline, --scrollYTimeline;
  /* Distance from the center */
  --sDist: calc(hypot(
          var(--sX) * var(--viewportWidthPx),
          var(--sY) * var(--viewportHeightPx)
  ));
  --XsizeMultiplier: calc(1 - (0.5 + 0.5*(cos(pi *
      (clamp(0, var(--sDist), 80)/80)
  ))));
  --YsizeMultiplier: calc(1 - (0.5 + 0.5*(cos(pi *
    (clamp(0, var(--sDist), 80)/80)
  ))));


  perspective-origin: calc(var(--pointerDownX)*1000px) calc(var(--pointerDownY)*1000px);
  background-color: deeppink;
  /*transform: translate(var(--XsizeMultiplier) * var(--viewportWidthPx) * 1px, 100px) scale(var(--XsizeMultiplier), var(--YsizeMultiplier));*/
  transform:
    perspective(10px)
    translate3d(
      calc(var(--sX) * var(--viewportWidthPx) * -1px),
      calc(var(--sY) * var(--viewportHeightPx) * -1px),
      calc(var(--XsizeMultiplier) * -100px)
    );

  /*transition: --pointerDownX 400ms ease-in-out,
              --pointerDownY 400ms ease-in-out;*/

  width: 100%;
  height: 100%;
  position: fixed;
}

.spacer {
  width:100vw;
  height:100vh;
  position:relative;
  left: 100vw;
  top: 100vh;
  z-index: 3;
  scroll-snap-align: center;
}